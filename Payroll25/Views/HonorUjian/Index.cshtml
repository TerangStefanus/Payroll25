@model HonorUjianModel.HonorUjianViewModel

@{
    int counter = 0;
}

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Honor Ujian / Remidi</title>

    <!-- Referensi ke DataTables dan Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.2/css/jquery.dataTables.min.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <style>
        .select2-container {
            width: 100% !important;
        }

        .select2-drop {
            width: 100% !important;
        }

        .select2-search {
            width: 100% !important;
        }

            .select2-search input {
                width: 100% !important;
            }

        .editable-cell:hover {
            cursor: pointer; /* Ubah penunjuk mouse menjadi tangan (pointer) saat dihover */
        }
    </style>
</head>


<body>
    <div class="container mt-5">
        <h1 class="my-4">Honor Ujian / Remidi</h1>

        <!-- Insert data-->
        <div class="row">
            <div class="col-md-6 border border-5 p-3 mb-4 mt-3">

                <h3 style="padding-bottom: 25px;">
                    Tambah Vakasi Ujian - Remidi 
                </h3>

                <form id="bebanMengajarForm" method="post" action="@Url.Action("InsertHonorUjian", "HonorUjian")">

                    <div class="mb-3">
                        <label class="control-label">Tahun</label>
                        <select class="form-control" id="tahunInput">
                            @{
                                var currentYear = DateTime.Now.Year;
                                for (var Year = currentYear; Year >= 2019; Year--)
                                {
                                    <option value="@Year">@Year</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="ID_BULAN_GAJI" class="form-label">BULAN GAJI</label>
                        <select class="form-control" name="ID_BULAN_GAJI" id="bulanGajiDropdown">
                            <option value="">Pilih Bulan</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="ID_KOMPONEN_GAJI" class="form-label">KOMPONEN GAJI</label>
                        <select class="form-control" name="ID_KOMPONEN_GAJI" id="komponenGajiDropdown">
                            <option value="">Pilih Komponen Gaji</option>
                            @foreach (var item in (IEnumerable<Payroll25.Models.HonorUjianModel>)ViewBag.KomponenGajiList)
                            {
                                <option value="@item.ID_KOMPONEN_GAJI">@item.KOMPONEN_GAJI</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="NPP" class="form-label">NPP</label>
                        <input type="text" class="form-control" id="NPP" name="NPP">
                    </div>

                    <div class="mb-3">
                        <label for="JUMLAH" class="form-label">JUMLAH</label>
                        <input type="number" class="form-control" id="JUMLAH" name="JUMLAH">
                    </div>

                    <div class="mb-3">
                        <label for="DESKRIPSI" class="form-label">DESKRIPSI</label>
                        <input type="text" class="form-control" id="DESKRIPSI" name="DESKRIPSI">
                    </div>

                    <button id="btnTambah" class="btn btn-primary">Tambah</button>
                </form>
            </div>

            <!-- Sub-container untuk Pencarian berdasarkan NPP dan Tahun -->
            <div class="col-md-6 border border-5 p-3 mb-4 mt-3">

                <h3 style="padding-bottom: 15px;">
                    Pencarian
                </h3>

                <form id="searchForm" method="get" action="@Url.Action("Index", "HonorUjian")">

                    <div>
                        <h3>Cari Berdasarkan NPP</h3>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="NPPFilter" name="NPPFilter" value="@Model.NPPFilter" placeholder="Masukkan NPP">
                        </div>
                    </div>

                    <div>
                        <h3>Cari Berdasarkan NAMA</h3>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" id="NAMAFilter" name="NAMAFilter" value="@Model.NAMAFilter" placeholder="Masukkan NAMA">
                        </div>
                    </div>

                    <button class="btn btn-primary" type="submit">Cari</button>
                </form>

            </div>
        </div>

        <!-- Tabel data  -->
        <table class="table mt-3" id="dataTable">
            <thead style="background-color: #8FA0C7">
                <tr>
                    <th>NO</th>
                    <th>NPP</th>
                    <th>NAMA</th>
                    <th>KOMPONEN GAJI</th>
                    <th>JUMLAH</th>
                    <th>TARIF</th>
                    <th>TANGGAL</th>
                    <th>BUTTON</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.HonorUjianList != null)
                {
                    @foreach (var item in Model.HonorUjianList)
                    {
                        counter++;
                        <tr>
                            <td>@counter</td>

                            <td data-id="@item.ID_VAKASI" data-column-name="NPP" class="editable-cell" title="Edit">@item.NPP</td>

                            <td>@item.NAMA</td>

                            <td data-id="@item.ID_VAKASI" data-column-name="ID_KOMPONEN_GAJI" class="komponen-gaji-cell editable-cell" title="Edit">
                                <select class='form-control select2' data-id="@item.ID_VAKASI" data-column-name="ID_KOMPONEN_GAJI">
                                    @foreach (var komponen in (IEnumerable<Payroll25.Models.HonorUjianModel>)ViewBag.KomponenGajiList)
                                    {
                                        var selectedAttribute = komponen.KOMPONEN_GAJI == item.KOMPONEN_GAJI ? "selected" : "";
                                        @Html.Raw($"<option value=\"{komponen.ID_KOMPONEN_GAJI}\" {selectedAttribute}>{komponen.KOMPONEN_GAJI}</option>")
                                    }
                                </select>
                            </td>

                            <td data-id="@item.ID_VAKASI" data-column-name="JUMLAH" class="editable-cell" title="Edit">@item.JUMLAH</td>

                            <td>@item.NOMINAL</td>

                            <td>@item.TANGGAL</td>

                            <td><button type="button" class="btn btn-danger" onclick="deleteRow(@item.ID_VAKASI)">Hapus</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        @if (Model.HonorUjianList != null && Model.HonorUjianList.Any())
        {
            <button id="updateBtn" class="btn btn-success mt-3">Simpan</button>
        }


    </div>
</body>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.2/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>

    <script>

        function deleteRow(id) {
            if (confirm('Apakah Anda yakin ingin menghapus data ini?')) {
                $.ajax({
                    url: '/HonorUjian/DeleteHonorUjian',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify([{ ID_VAKASI: id }]), // Mengirimkan ID dalam format JSON
                    success: function (response) {
                        if (response.status) {
                            alert('Data berhasil dihapus');
                            location.reload(); // Memuat ulang halaman untuk memperbarui tampilan tabel
                        } else {
                            alert('Penghapusan data gagal');
                        }
                    }
                });
            }
        }

        $(document).ready(function () {


            var updatedData = [];

            // Data komponen gaji dari ViewBag
            var komponenGajiData = @Html.Raw(Json.Serialize(ViewBag.KomponenGajiList));

            // Menginisialisasi plugin select2
            $('.select2').select2({
                width: '100%'
            });

            // Menginisialisasi DataTable
            $('#dataTable').DataTable();

            // Event handler untuk tombol tambah
            $("#btnTambah").click(function (event) {
                event.preventDefault();
                // Mengumpulkan data dari form
                var formData = {
                    NPP: $("#NPP").val(),
                    ID_BULAN_GAJI: $("#bulanGajiDropdown").val(),
                    ID_KOMPONEN_GAJI: $("#komponenGajiDropdown").val(),
                    JUMLAH: $("#JUMLAH").val(),
                    DESKRIPSI: $("#DESKRIPSI").val()
                };

                // Mengirim data ke server untuk ditambahkan
                $.ajax({
                    url: '/HonorUjian/InsertHonorUjian',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.status) {
                            alert('Data berhasil ditambahkan');
                            location.reload();
                        } else {
                            alert('Data gagal ditambahkan');
                        }
                    }
                });
            });

            // Fungsi untuk mengubah sel menjadi dropdown
            function convertCellToDropdown(cell, data) {
                var originalValue = cell.text();
                var dropdown = $("<select class='form-control select2'></select>");
                data.forEach(function (item) {
                    var option = $("<option></option>").attr("value", item.ID_KOMPONEN_GAJI).text(item.KOMPONEN_GAJI);
                    if (item.KOMPONEN_GAJI === originalValue) {
                        option.attr("selected", "selected");
                    }
                    dropdown.append(option);
                });
                cell.html(dropdown);
                cell.addClass('active');
                $('.select2').select2({
                    width: '100%'
                });
                cell.find('.select2').focus();
            }

            // Event handler untuk double click pada sel yang dapat diedit
            $("body").on("dblclick", ".editable-cell", function () {
                var cell = $(this);
                var originalValue = cell.text();
                var id = cell.attr('data-id');
                var columnName = cell.attr('data-column-name');

                // Jika kolom adalah NPP atau JUMLAH, ubah menjadi input text
                if (columnName === "NPP" || columnName === "JUMLAH") {
                    var input = $("<input type='text' />").val(originalValue);
                    cell.html(input);
                    cell.addClass('active');
                    input.focus();
                }
            });

            // Event handler untuk blur pada input atau select dalam sel yang aktif
            $("body").on("blur", ".active > input", function () {
                var value = $(this).val();
                var cell = $(this).parent();
                cell.html(value);
                cell.removeClass('active');
                var id = cell.attr('data-id');
                var columnName = cell.attr('data-column-name');

                // Memperbarui data yang telah diubah
                updateData(id, columnName, value);
            });


            $("body").on("change", ".komponen-gaji-cell select", function () {
                var newValue = $(this).val();
                var cell = $(this).closest('td');
                var id = cell.attr('data-id');
                var columnName = cell.attr('data-column-name');

                // Memperbarui data yang telah diubah
                updateData(id, columnName, newValue);
            });


            // Fungsi untuk memperbarui data yang telah diubah
            function updateData(id, columnName, value) {
                var existingData = updatedData.find(data => data.ID_VAKASI === id);
                if (existingData) {
                    existingData[columnName] = value;
                } else {
                    var newData = { ID_VAKASI: id };
                    newData[columnName] = value;

                    // Mendapatkan baris yang berisi sel yang sedang diedit
                    var row = $(`[data-id='${id}']`).closest('tr');

                    // Mendapatkan nilai dari sel lain dalam baris yang sama
                    newData['NPP'] = row.find('[data-column-name="NPP"]').text();
                    newData['JUMLAH'] = row.find('[data-column-name="JUMLAH"]').text();
                    newData['ID_KOMPONEN_GAJI'] = row.find('[data-column-name="ID_KOMPONEN_GAJI"] select').val();

                    // Menambahkan data baru ke array
                    updatedData.push(newData);
                }
            }

            // Event handler untuk tombol update
            $("#updateBtn").click(function () {
                console.log(updatedData);
                // Mengirim data yang diupdate ke server
                $.ajax({
                    url: '/HonorUjian/UpdateHonorUjian',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(updatedData),
                    success: function (response) {
                        if (response.status) {
                            alert('Data berhasil diupdate');
                            location.reload();
                        } else {
                            alert('Data gagal diupdate');
                        }
                    }
                });
            });



            // Fungsi untuk mendapatkan data bulan gaji berdasarkan tahun
            function getCariData() {
                var tahun = $("#tahunInput").val();
                $.get("/HonorUjian/GetBulanGajiDropdown", { tahun: tahun }, function (data) {
                    console.log("Data yang diterima dari server:", data);
                    var options = "<option value=''>Pilih ID Bulan Gaji</option>";
                    var namaBulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];
                    for (var i = 0; i < data.length; i++) {
                        options += "<option value='" + data[i].id_bulan + "'>" + namaBulan[i] + "</option>";
                    }
                    $("#bulanGajiDropdown").html(options);
                }).done(function () {
                    console.log("Pengambilan data selesai.");
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log("Gagal mengambil data:", textStatus, errorThrown);
                });
            }

            // Event handler untuk perubahan pada input tahun
            $("#tahunInput").change(function () {
                getCariData();
            });

            // Memanggil fungsi getCariData saat halaman dimuat
            getCariData();
        });
    </script>
}

